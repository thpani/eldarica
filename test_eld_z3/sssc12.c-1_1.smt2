(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_thr11_envLoop_thr (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_thr1_envLoop_thr (Int Int Int Int Int Int) Bool)
(declare-fun inv_thr2_envLoop_thr (Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (and (<= 0 (+ var3 (- 1))) (and (and (= var4 var2) (= 0 var6)) (= var3 var5))) (and (<= 0 (+ var1 (- 1))) (and (and (= var0 var2) (= 0 var6)) (= var1 var5))))) (inv_thr1_envLoop_thr var2 var6 var5 0 (+ var1 (- 1)) 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_thr1_envLoop_thr var2 var0 var4 var5 var1 var3) (<= 0 (+ var2 (- 1))))) (inv_thr2_envLoop_thr var2 var0 var4 var5 var1 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr11_envLoop_thr var2 var0 var3 var7 var6 var1 var5 var4) (<= 0 (+ (+ var6 (* (- 1) (+ var7 1))) (- 1))))) (inv_thr11_envLoop_thr var2 var0 var3 (+ var7 1) var6 var1 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_thr2_envLoop_thr var1 var0 var2 var3 var4 var5) (and (<= 0 (+ (+ (+ var0 10) (* (- 1) var0)) (- 1))) (<= 0 (+ var1 (* (- 1) (+ var0 10))))))) (inv_thr11_envLoop_thr var1 (+ var0 10) var2 var0 (+ var0 10) var3 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_thr1_envLoop_thr var1 var0 var4 var2 var3 var5) (and (<= 0 (+ var1 (- 1))) (<= 0 (+ var3 (- 1)))))) (inv_thr1_envLoop_thr var1 var0 var4 (+ var2 1) (+ var3 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_thr2_envLoop_thr var1 var0 var4 var2 var3 var5) (and (<= 0 (+ var1 (- 1))) (<= 0 (+ var3 (- 1)))))) (inv_thr2_envLoop_thr var1 var0 var4 (+ var2 1) (+ var3 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr11_envLoop_thr var2 var0 var5 var7 var1 var3 var4 var6) (and (<= 0 (+ var2 (- 1))) (<= 0 (+ var4 (- 1)))))) (inv_thr11_envLoop_thr var2 var0 var5 var7 var1 (+ var3 1) (+ var4 (- 1)) var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr1_envLoop_thr var1 var0 var4 var2 var3 var7) (and (<= 0 (+ (+ var6 (* (- 1) (+ var5 1))) (- 1))) (<= 0 (+ var7 (- 1)))))) (inv_thr1_envLoop_thr var1 var0 var4 var2 var3 (+ var7 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr2_envLoop_thr var1 var0 var4 var2 var3 var7) (and (<= 0 (+ (+ var6 (* (- 1) (+ var5 1))) (- 1))) (<= 0 (+ var7 (- 1)))))) (inv_thr2_envLoop_thr var1 var0 var4 var2 var3 (+ var7 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_thr11_envLoop_thr var1 var0 var6 var4 var2 var3 var5 var9) (and (<= 0 (+ (+ var8 (* (- 1) (+ var7 1))) (- 1))) (<= 0 (+ var9 (- 1)))))) (inv_thr11_envLoop_thr var1 var0 var6 var4 var2 var3 var5 (+ var9 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_thr1_envLoop_thr var1 var0 var4 var2 var3 var5) (and (and (<= 0 (+ (+ (+ var0 10) (* (- 1) var0)) (- 1))) (<= 0 (+ var1 (* (- 1) (+ var0 10))))) (<= 0 (+ var2 (- 1)))))) (inv_thr1_envLoop_thr var1 (+ var0 10) var4 (+ var2 (- 1)) var3 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_thr2_envLoop_thr var1 var0 var4 var2 var3 var5) (and (and (<= 0 (+ (+ (+ var0 10) (* (- 1) var0)) (- 1))) (<= 0 (+ var1 (* (- 1) (+ var0 10))))) (<= 0 (+ var2 (- 1)))))) (inv_thr2_envLoop_thr var1 (+ var0 10) var4 (+ var2 (- 1)) var3 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr11_envLoop_thr var2 var0 var6 var1 var3 var4 var5 var7) (and (and (<= 0 (+ (+ (+ var0 10) (* (- 1) var0)) (- 1))) (<= 0 (+ var2 (* (- 1) (+ var0 10))))) (<= 0 (+ var4 (- 1)))))) (inv_thr11_envLoop_thr var2 (+ var0 10) var6 var1 var3 (+ var4 (- 1)) var5 (+ var7 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (not (and (inv_thr11_envLoop_thr var4 var6 var3 var9 var8 var7 var2 var10) (and (and (and (= var4 var1) (= var6 var0)) (= var3 var5)) (or (not (<= 0 var9)) (not (<= 0 (+ (+ var1 (* (- 1) var9)) (- 1))))))))))
(check-sat)
