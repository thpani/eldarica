(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_thr1_envLoop_thr (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_thr2_envLoop_thr (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_thr3_envLoop_thr (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_thr4_envLoop_thr (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_thr6_envLoop_thr (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (<= 0 (+ var0 (- 1))) (and (and (= 0 var4) (= 0 var3)) (= var0 var1))) (and (<= 0 (+ var2 (- 1))) (and (and (= 0 var4) (= 0 var3)) (= var2 var1))))) (inv_thr1_envLoop_thr var4 var3 var1 0 (+ var2 (- 1)) 0 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_thr1_envLoop_thr var5 var6 var3 var0 var2 var7 var1 var4)) (inv_thr2_envLoop_thr var5 1 var3 var0 var2 var7 var1 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_thr2_envLoop_thr var6 var7 var5 var4 var0 var1 var2 var3)) (inv_thr3_envLoop_thr var6 0 var5 var4 var0 var1 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_thr3_envLoop_thr var3 var5 var2 var7 var1 var0 var6 var4)) (inv_thr4_envLoop_thr (+ var3 1) var5 var2 var7 var1 var0 var6 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr4_envLoop_thr var4 var6 var2 var7 var5 var1 var0 var3) (= var4 var2))) (inv_thr6_envLoop_thr var4 var6 var2 var7 var5 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr1_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var4 (- 1))))) (inv_thr1_envLoop_thr var5 1 var3 (+ var2 1) (+ var4 (- 1)) var0 var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr2_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var4 (- 1))))) (inv_thr2_envLoop_thr var5 1 var3 (+ var2 1) (+ var4 (- 1)) var0 var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr3_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var4 (- 1))))) (inv_thr3_envLoop_thr var5 1 var3 (+ var2 1) (+ var4 (- 1)) var0 var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr4_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var4 (- 1))))) (inv_thr4_envLoop_thr var5 1 var3 (+ var2 1) (+ var4 (- 1)) var0 var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr6_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var4 (- 1))))) (inv_thr6_envLoop_thr var5 1 var3 (+ var2 1) (+ var4 (- 1)) var0 var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr1_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var2 (- 1))))) (inv_thr1_envLoop_thr var5 0 var3 (+ var2 (- 1)) var4 (+ var0 1) var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr2_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var2 (- 1))))) (inv_thr2_envLoop_thr var5 0 var3 (+ var2 (- 1)) var4 (+ var0 1) var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr3_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var2 (- 1))))) (inv_thr3_envLoop_thr var5 0 var3 (+ var2 (- 1)) var4 (+ var0 1) var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr4_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var2 (- 1))))) (inv_thr4_envLoop_thr var5 0 var3 (+ var2 (- 1)) var4 (+ var0 1) var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr6_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var2 (- 1))))) (inv_thr6_envLoop_thr var5 0 var3 (+ var2 (- 1)) var4 (+ var0 1) var7 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr1_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var0 (- 1))))) (inv_thr1_envLoop_thr (+ var5 1) var6 var3 var2 var4 (+ var0 (- 1)) (+ var7 1) var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr2_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var0 (- 1))))) (inv_thr2_envLoop_thr (+ var5 1) var6 var3 var2 var4 (+ var0 (- 1)) (+ var7 1) var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr3_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var0 (- 1))))) (inv_thr3_envLoop_thr (+ var5 1) var6 var3 var2 var4 (+ var0 (- 1)) (+ var7 1) var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr4_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var0 (- 1))))) (inv_thr4_envLoop_thr (+ var5 1) var6 var3 var2 var4 (+ var0 (- 1)) (+ var7 1) var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr6_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (<= 0 (+ var0 (- 1))))) (inv_thr6_envLoop_thr (+ var5 1) var6 var3 var2 var4 (+ var0 (- 1)) (+ var7 1) var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr1_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (and (= var5 var3) (<= 0 (+ var7 (- 1)))))) (inv_thr1_envLoop_thr var5 var6 var3 var2 var4 var0 (+ var7 (- 1)) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr2_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (and (= var5 var3) (<= 0 (+ var7 (- 1)))))) (inv_thr2_envLoop_thr var5 var6 var3 var2 var4 var0 (+ var7 (- 1)) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr3_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (and (= var5 var3) (<= 0 (+ var7 (- 1)))))) (inv_thr3_envLoop_thr var5 var6 var3 var2 var4 var0 (+ var7 (- 1)) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr4_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (and (= var5 var3) (<= 0 (+ var7 (- 1)))))) (inv_thr4_envLoop_thr var5 var6 var3 var2 var4 var0 (+ var7 (- 1)) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_thr6_envLoop_thr var5 var6 var3 var2 var4 var0 var7 var1) (and (= var5 var3) (<= 0 (+ var7 (- 1)))))) (inv_thr6_envLoop_thr var5 var6 var3 var2 var4 var0 (+ var7 (- 1)) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (not (and (inv_thr6_envLoop_thr var5 var0 var6 var3 var1 var7 var10 var9) (and (and (and (= var5 var4) (= var0 var8)) (= var6 var2)) (not (= var8 0)))))))
(check-sat)
