(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_stop0_add0_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop0_add1_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop0_add2_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop12_add0_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop12_add1_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop12_add2_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop1_add0_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop1_add1_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop1_add2_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop5_add0_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop5_add1_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop5_add2_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop7_add0_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop7_add1_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_stop7_add2_envLoop_add (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (and (and (<= 0 (+ var2 (- 1))) (and (and (and (and (= 1 var6) (= 0 var4)) (= 0 var5)) (= 0 var7)) (= var2 var3))) (and (<= 0 (+ var1 (- 1))) (and (and (and (and (= 1 var6) (= 0 var4)) (= 0 var5)) (= 0 var7)) (= var1 var3)))) (and (<= 0 (+ var0 (- 1))) (and (and (and (and (= 1 var6) (= 0 var4)) (= 0 var5)) (= 0 var7)) (= var0 var3))))) (inv_stop1_add1_envLoop_add var6 var4 var5 var7 var3 0 (+ var0 (- 1)) 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var2 var1 var0 var6 var5 var4 var3 var7) (= var2 1))) (inv_stop7_add1_envLoop_add (+ var2 (- 1)) var1 1 var6 var5 var4 var3 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (= var4 1))) (inv_stop7_add2_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 var2 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add0_envLoop_add var4 var3 var1 var7 var6 var2 var5 var0) (= var4 1))) (inv_stop7_add0_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 var2 var5 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var3 var2 var1 var7 var6 var4 var0 var5) (not (= var3 1)))) (inv_stop7_add1_envLoop_add (+ var3 (- 1)) var2 var1 var7 var6 var4 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var4 var3 var2 var7 var6 var0 var1 var5) (not (= var4 1)))) (inv_stop7_add2_envLoop_add (+ var4 (- 1)) var3 var2 var7 var6 var0 var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add0_envLoop_add var4 var3 var1 var6 var5 var0 var2 var7) (not (= var4 1)))) (inv_stop7_add0_envLoop_add (+ var4 (- 1)) var3 var1 var6 var5 var0 var2 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_stop12_add1_envLoop_add var2 var1 var0 var6 var5 var7 var3 var4)) (inv_stop0_add1_envLoop_add var2 var1 var0 1 var5 var7 var3 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_stop12_add2_envLoop_add var3 var2 var1 var6 var5 var4 var7 var0)) (inv_stop0_add2_envLoop_add var3 var2 var1 1 var5 var4 var7 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_stop12_add0_envLoop_add var4 var3 var2 var7 var6 var5 var0 var1)) (inv_stop0_add0_envLoop_add var4 var3 var2 1 var6 var5 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_stop1_add1_envLoop_add var3 var2 var0 var7 var6 var1 var5 var4)) (inv_stop5_add1_envLoop_add var3 1 var0 var7 var6 var1 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_stop1_add2_envLoop_add var4 var3 var1 var6 var5 var0 var2 var7)) (inv_stop5_add2_envLoop_add var4 1 var1 var6 var5 var0 var2 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (inv_stop1_add0_envLoop_add var4 var3 var2 var7 var6 var1 var5 var0)) (inv_stop5_add0_envLoop_add var4 1 var2 var7 var6 var1 var5 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add1_envLoop_add var3 var2 var0 var7 var6 var4 var5 var1) (not (= var0 0)))) (inv_stop12_add1_envLoop_add var3 var2 var0 var7 var6 var4 var5 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add2_envLoop_add var3 var2 var1 var7 var6 var0 var5 var4) (not (= var1 0)))) (inv_stop12_add2_envLoop_add var3 var2 var1 var7 var6 var0 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add0_envLoop_add var4 var3 var1 var7 var6 var0 var2 var5) (not (= var1 0)))) (inv_stop12_add0_envLoop_add var4 var3 var1 var7 var6 var0 var2 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add1_envLoop_add var3 var2 var1 var6 var5 var7 var4 var0) (= var2 0))) (inv_stop1_add2_envLoop_add (+ var3 1) var2 var1 var6 var5 var7 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add1_envLoop_add var3 var2 var1 var7 var6 var4 var5 var0) (= var2 0))) (inv_stop7_add2_envLoop_add (+ var3 1) var2 var1 var7 var6 var4 var5 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var3 var2 var1 var7 var6 var0 var5 var4) (= var2 0))) (inv_stop5_add2_envLoop_add (+ var3 1) var2 var1 var7 var6 var0 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add1_envLoop_add var4 var3 var2 var7 var6 var0 var5 var1) (= var3 0))) (inv_stop0_add2_envLoop_add (+ var4 1) var3 var2 var7 var6 var0 var5 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add1_envLoop_add var4 var3 var1 var6 var5 var0 var2 var7) (= var3 0))) (inv_stop12_add2_envLoop_add (+ var4 1) var3 var1 var6 var5 var0 var2 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add1_envLoop_add var5 var4 var1 var7 var6 var0 var2 var3) (not (= var4 0)))) (inv_stop1_add0_envLoop_add var5 var4 var1 var7 var6 var0 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add1_envLoop_add var5 var4 var3 var7 var6 var0 var2 var1) (not (= var4 0)))) (inv_stop7_add0_envLoop_add var5 var4 var3 var7 var6 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var3 var2 var1 var7 var6 var0 var4 var5) (not (= var2 0)))) (inv_stop5_add0_envLoop_add var3 var2 var1 var7 var6 var0 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add1_envLoop_add var5 var4 var1 var7 var6 var0 var3 var2) (not (= var4 0)))) (inv_stop0_add0_envLoop_add var5 var4 var1 var7 var6 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add1_envLoop_add var4 var3 var2 var6 var5 var7 var0 var1) (not (= var3 0)))) (inv_stop12_add0_envLoop_add var4 var3 var2 var6 var5 var7 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add2_envLoop_add var5 var4 var2 var7 var6 var3 var1 var0) (= var5 1))) (inv_stop1_add0_envLoop_add (+ var5 (- 1)) var4 1 var7 var6 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add2_envLoop_add var5 var4 var2 var7 var6 var0 var3 var1) (= var5 1))) (inv_stop7_add0_envLoop_add (+ var5 (- 1)) var4 1 var7 var6 var0 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var3 var2 var1 var7 var6 var5 var0 var4) (= var3 1))) (inv_stop5_add0_envLoop_add (+ var3 (- 1)) var2 1 var7 var6 var5 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add2_envLoop_add var5 var4 var1 var7 var6 var3 var2 var0) (= var5 1))) (inv_stop0_add0_envLoop_add (+ var5 (- 1)) var4 1 var7 var6 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add2_envLoop_add var3 var2 var1 var7 var6 var5 var4 var0) (= var3 1))) (inv_stop12_add0_envLoop_add (+ var3 (- 1)) var2 1 var7 var6 var5 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add2_envLoop_add var3 var2 var1 var7 var6 var0 var4 var5) (not (= var3 1)))) (inv_stop1_add0_envLoop_add (+ var3 (- 1)) var2 var1 var7 var6 var0 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add2_envLoop_add var3 var2 var1 var7 var6 var5 var4 var0) (not (= var3 1)))) (inv_stop7_add0_envLoop_add (+ var3 (- 1)) var2 var1 var7 var6 var5 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var3 var2 var1 var7 var6 var0 var5 var4) (not (= var3 1)))) (inv_stop5_add0_envLoop_add (+ var3 (- 1)) var2 var1 var7 var6 var0 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add2_envLoop_add var3 var2 var1 var7 var6 var0 var4 var5) (not (= var3 1)))) (inv_stop0_add0_envLoop_add (+ var3 (- 1)) var2 var1 var7 var6 var0 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add2_envLoop_add var5 var4 var3 var7 var6 var0 var2 var1) (not (= var5 1)))) (inv_stop12_add0_envLoop_add (+ var5 (- 1)) var4 var3 var7 var6 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop1_add1_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop7_add1_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop5_add1_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop0_add1_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop12_add1_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop1_add2_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop7_add2_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop5_add2_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop0_add2_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop12_add2_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop1_add0_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop7_add0_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop5_add0_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop0_add0_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var3 0) (<= 0 (+ var0 (- 1)))))) (inv_stop12_add0_envLoop_add (+ var4 1) var3 var1 var7 var6 (+ var2 1) (+ var0 (- 1)) var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop1_add1_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop7_add1_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop5_add1_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop0_add1_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop12_add1_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop1_add2_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop7_add2_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop5_add2_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop0_add2_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop12_add2_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop1_add0_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop7_add0_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop5_add0_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop0_add0_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var3 0)) (<= 0 (+ var0 (- 1)))))) (inv_stop12_add0_envLoop_add var4 var3 var1 var7 var6 var2 (+ var0 (- 1)) (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop1_add1_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop7_add1_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop5_add1_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop0_add1_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop12_add1_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop1_add2_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop7_add2_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop5_add2_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop0_add2_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop12_add2_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop1_add0_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop7_add0_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop5_add0_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop0_add0_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (= var4 1) (<= 0 (+ var2 (- 1)))))) (inv_stop12_add0_envLoop_add (+ var4 (- 1)) var3 1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop1_add1_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop7_add1_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop5_add1_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop0_add1_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add1_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop12_add1_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop1_add2_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop7_add2_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop5_add2_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop0_add2_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add2_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop12_add2_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop1_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop1_add0_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop7_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop7_add0_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop5_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop5_add0_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop0_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop0_add0_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_stop12_add0_envLoop_add var4 var3 var1 var7 var6 var2 var0 var5) (and (not (= var4 1)) (<= 0 (+ var2 (- 1)))))) (inv_stop12_add0_envLoop_add (+ var4 (- 1)) var3 var1 var7 var6 (+ var2 (- 1)) var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_stop1_add2_envLoop_add var9 var1 var7 var6 var2 var0 var8 var10) (and (and (and (and (and (= var9 var5) (= var1 var4)) (= var7 var3)) (= var6 var12)) (= var2 var11)) (not (= var12 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_stop7_add2_envLoop_add var0 var10 var8 var6 var7 var5 var2 var1) (and (and (and (and (and (= var0 var9) (= var10 var4)) (= var8 var3)) (= var6 var12)) (= var7 var11)) (not (= var12 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_stop5_add2_envLoop_add var2 var8 var5 var12 var1 var0 var4 var9) (and (and (and (and (and (= var2 var7) (= var8 var6)) (= var5 var3)) (= var12 var11)) (= var1 var10)) (not (= var11 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_stop0_add2_envLoop_add var2 var1 var12 var10 var0 var3 var5 var11) (and (and (and (and (and (= var2 var7) (= var1 var6)) (= var12 var4)) (= var10 var9)) (= var0 var8)) (not (= var9 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_stop12_add2_envLoop_add var1 var7 var0 var5 var2 var12 var11 var9) (and (and (and (and (and (= var1 var6) (= var7 var4)) (= var0 var3)) (= var5 var10)) (= var2 var8)) (not (= var10 0)))))))
(check-sat)
