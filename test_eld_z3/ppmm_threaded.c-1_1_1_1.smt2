(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_inc1_dec1_envLoop_inc_envLoop_dec (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_inc1_dec3_envLoop_inc_envLoop_dec (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_inc3_dec1_envLoop_inc_envLoop_dec (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_inc3_dec3_envLoop_inc_envLoop_dec (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (and (and (and (and (<= 0 (+ var6 (- 1))) (<= 0 (+ var3 (- 1)))) (and (and (= 0 var8) (= var6 var7)) (= var3 var9))) (and (and (<= 0 (+ var4 (- 1))) (<= 0 (+ var0 (- 1)))) (and (and (= 0 var8) (= var4 var7)) (= var0 var9)))) (and (and (<= 0 (+ var10 (- 1))) (<= 0 (+ var5 (- 1)))) (and (and (= 0 var8) (= var10 var7)) (= var5 var9)))) (and (and (<= 0 (+ var2 (- 1))) (<= 0 (+ var1 (- 1)))) (and (and (= 0 var8) (= var2 var7)) (= var1 var9))))) (inv_inc1_dec1_envLoop_inc_envLoop_dec var8 var7 var9 0 (+ var10 (- 1)) 0 (+ var1 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_inc1_dec1_envLoop_inc_envLoop_dec var5 var6 var3 var0 var2 var1 var4)) (inv_inc3_dec1_envLoop_inc_envLoop_dec (+ var5 1) var6 var3 var0 var2 var1 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_inc1_dec3_envLoop_inc_envLoop_dec var3 var5 var1 var2 var4 var0 var6)) (inv_inc3_dec3_envLoop_inc_envLoop_dec (+ var3 1) var5 var1 var2 var4 var0 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_inc1_dec1_envLoop_inc_envLoop_dec var2 var4 var1 var5 var0 var6 var3)) (inv_inc1_dec3_envLoop_inc_envLoop_dec (+ var2 (- 1)) var4 var1 var5 var0 var6 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (inv_inc3_dec1_envLoop_inc_envLoop_dec var5 var6 var1 var3 var0 var4 var2)) (inv_inc3_dec3_envLoop_inc_envLoop_dec (+ var5 (- 1)) var6 var1 var3 var0 var4 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc1_dec1_envLoop_inc_envLoop_dec var4 var6 var1 var5 var0 var3 var2) (<= 0 (+ var0 (- 1))))) (inv_inc1_dec1_envLoop_inc_envLoop_dec (+ var4 1) var6 var1 (+ var5 1) (+ var0 (- 1)) var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc3_dec1_envLoop_inc_envLoop_dec var3 var6 var1 var4 var0 var2 var5) (<= 0 (+ var0 (- 1))))) (inv_inc3_dec1_envLoop_inc_envLoop_dec (+ var3 1) var6 var1 (+ var4 1) (+ var0 (- 1)) var2 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc1_dec3_envLoop_inc_envLoop_dec var4 var6 var3 var5 var0 var1 var2) (<= 0 (+ var0 (- 1))))) (inv_inc1_dec3_envLoop_inc_envLoop_dec (+ var4 1) var6 var3 (+ var5 1) (+ var0 (- 1)) var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc3_dec3_envLoop_inc_envLoop_dec var4 var6 var2 var5 var1 var3 var0) (<= 0 (+ var1 (- 1))))) (inv_inc3_dec3_envLoop_inc_envLoop_dec (+ var4 1) var6 var2 (+ var5 1) (+ var1 (- 1)) var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc1_dec1_envLoop_inc_envLoop_dec var5 var6 var3 var0 var1 var2 var4) (<= 0 (+ var4 (- 1))))) (inv_inc1_dec1_envLoop_inc_envLoop_dec (+ var5 (- 1)) var6 var3 var0 var1 (+ var2 1) (+ var4 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc3_dec1_envLoop_inc_envLoop_dec var3 var5 var1 var6 var4 var0 var2) (<= 0 (+ var2 (- 1))))) (inv_inc3_dec1_envLoop_inc_envLoop_dec (+ var3 (- 1)) var5 var1 var6 var4 (+ var0 1) (+ var2 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc1_dec3_envLoop_inc_envLoop_dec var5 var6 var2 var1 var3 var0 var4) (<= 0 (+ var4 (- 1))))) (inv_inc1_dec3_envLoop_inc_envLoop_dec (+ var5 (- 1)) var6 var2 var1 var3 (+ var0 1) (+ var4 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_inc3_dec3_envLoop_inc_envLoop_dec var5 var6 var3 var0 var2 var1 var4) (<= 0 (+ var4 (- 1))))) (inv_inc3_dec3_envLoop_inc_envLoop_dec (+ var5 (- 1)) var6 var3 var0 var2 (+ var1 1) (+ var4 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc1_dec1_envLoop_inc_envLoop_dec var5 var1 var7 var2 var4 var8 var0) (and (and (and (= var5 var6) (= var1 var9)) (= var7 var3)) (or (not (<= 0 (+ var6 (* 1 var3)))) (not (<= 0 (+ (+ var9 (* (- 1) var6)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc1_dec3_envLoop_inc_envLoop_dec var7 var6 var0 var8 var4 var1 var3) (and (and (and (= var7 var5) (= var6 var9)) (= var0 var2)) (or (not (<= 0 (+ var5 (* 1 var2)))) (not (<= 0 (+ (+ var9 (* (- 1) var5)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc3_dec1_envLoop_inc_envLoop_dec var1 var0 var3 var6 var7 var5 var4) (and (and (and (= var1 var8) (= var0 var9)) (= var3 var2)) (or (not (<= 0 (+ (+ var8 (* 1 var2)) (- 1)))) (not (<= 0 (+ var9 (* (- 1) var8))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc3_dec3_envLoop_inc_envLoop_dec var0 var3 var1 var7 var4 var6 var9) (and (and (and (= var0 var5) (= var3 var8)) (= var1 var2)) (or (not (<= 0 (+ (+ var5 (* 1 var2)) (- 1)))) (not (<= 0 (+ var8 (* (- 1) var5))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc1_dec1_envLoop_inc_envLoop_dec var4 var3 var7 var9 var6 var2 var0) (and (and (and (= var4 var5) (= var3 var8)) (= var7 var1)) (or (not (<= 0 (+ (+ var5 (* 1 var1)) (- 1)))) (not (<= 0 (+ var8 (* (- 1) var5))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc3_dec1_envLoop_inc_envLoop_dec var2 var4 var9 var1 var0 var6 var5) (and (and (and (= var2 var7) (= var4 var8)) (= var9 var3)) (or (not (<= 0 (+ (+ var7 (* 1 var3)) (- 1)))) (not (<= 0 (+ var8 (* (- 1) var7))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc1_dec3_envLoop_inc_envLoop_dec var0 var1 var3 var6 var8 var4 var7) (and (and (and (= var0 var5) (= var1 var9)) (= var3 var2)) (or (not (<= 0 (+ var5 (* 1 var2)))) (not (<= 0 (+ (+ var9 (* (- 1) var5)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (not (and (inv_inc3_dec3_envLoop_inc_envLoop_dec var6 var2 var5 var0 var4 var8 var7) (and (and (and (= var6 var3) (= var2 var9)) (= var5 var1)) (or (not (<= 0 (+ var3 (* 1 var1)))) (not (<= 0 (+ (+ var9 (* (- 1) var3)) (- 1))))))))))
(check-sat)
